#!/usr/bin/env python3
import os, argparse, mimetypes, logging, json, subprocess, mutagenx
from michimusemodels import *

logger = logging.getLogger("mr.scan.64")

def main():
  parser = argparse.ArgumentParser(description='Builds music library for FFzanz')
  parser.add_argument('path', type=str, help='Directory containing the wanted files', default='/mnt/homie/Muzyka')
  parser.add_argument('--auto', action="store_true")
  args = parser.parse_args()
  if os.path.isdir(args.path):
    tracks = []
    for dirpath, dirnames, filenames in os.walk(args.path):
      for filename in filenames:
        file = os.path.join(dirpath, filename)
        if mimetypes.guess_type(file)[0]:
          if mimetypes.guess_type(file)[0].startswith('audio/'):
            try:
              Track.get(Track.path == file)
            except Track.DoesNotExist:
              tracks.append(os.path.abspath(file))
    for file in tracks:
      print("%i of %i" % (tracks.index(file)+1, len(tracks)))
      print(file)
      mutafile = mutagenx.File(file, easy=True)
      if args.auto and "title" in mutafile and "album" in mutafile and "artist" in mutafile:
        title = mutafile["title"][0]
        album = mutafile["album"][0]
        artist = mutafile["artist"][0]
      else:
        print()
        if mutafile and "title" in mutafile:
          title = input("Title: [%s] " % mutafile["title"][0])
          if len(title) < 1:
            title = mutafile["title"][0]
        else:
          title = input("Title: ")
        if mutafile and "album" in mutafile:
          album = input("Album: [%s] " % mutafile["album"][0])
          if len(album) < 1:
            album = mutafile["album"][0]
        else:
          album = input("Album: ")
        if mutafile and "artist" in mutafile:
          artist = input("Artist: [%s] " % mutafile["artist"][0])
          if len(artist) < 1:
            artist = mutafile["artist"][0]
        else:
          artist = input("Artist: ")
      t = Track.create(title=title,album=album,artist=artist,path=file)
      print()
      print()
  else:
    logger.error("Not a directory")

if __name__ == '__main__':
  main()
